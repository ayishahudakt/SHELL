#!/bin/bash

# 1. Command to display a message
echo "Your Message"

# 2. Read your name from the keyboard and display it
read -p "Enter your name: " name
echo "Hello, $name"

# 3. Create the directory structure dir1/dir4 and dir1/dir2/dir3 with a single command
mkdir -p dir1/dir4 dir1/dir2/dir3

# 4. a) Create a new directory
mkdir new_directory

# 4. b) Moving or renaming directories
mv old_directory new_directory

# 4. c) Display the current directory
pwd

# 5. Execute ls and store the output to a file lsoutput
ls > lsoutput

# 6. Copy the file file1 to newfile
cp -f file1 newfile  # Replace if exists
cp -n file1 newfile  # Do not replace if exists

# 7. Using expr
# 7. a) Read two integers X and Y. Display sum, difference, product, quotient, and remainder
read -p "Enter two numbers: " X Y
echo "Sum: $(expr $X + $Y)"
echo "Difference: $(expr $X - $Y)"
echo "Product: $(expr $X \* $Y)"
echo "Quotient: $(expr $X / $Y)"
echo "Remainder: $(expr $X % $Y)"

# 7. b) Read a string S, a position p, and a length l. Display the substring
read -p "Enter a string: " S
read -p "Enter position p: " p
read -p "Enter length l: " l
echo ${S:p:l}

# 8. Displaying the count of number of matches using grep
grep -c "pattern" filename

# 8. Displaying only the matched pattern using grep
grep -o "pattern" filename

# 8. Display all lines in a file that contain the string abc
grep "abc" filename

# 9. List all files and directories and give them as input to grep command using piping
ls | grep "pattern"

# 10. Execute ls -l and feed the result to less command
ls -l | less

# 11. Create 3 files containing name, age, and marks of 5 students respectively and paste them into a single CSV file
paste name_file age_file marks_file > students.csv

# 12. Find a specific file using find command
find /path/to/search -name "filename"

# 13. Using head command to display the first 5 lines of a file
head -n 5 filename

# 14. Using chown to change the ownership of a file
chown user:group filename

# 15. Execute a standard input and output redirection command
command > outputfile

# 16. Create a file file1 containing the word "Hello," using cat and output redirection
echo "Hello," > file1
echo ", Greetings!!" > file2
cat file1 - file2
